{"ast":null,"code":"import { ADD_ITEM } from \"../constants/actions-type\";\nconst initialState = {\n  listVisitedIssues: []\n};\n\nconst checkDuplicateItem = (state, item) => {\n  const {\n    listVisitedIssues\n  } = state || {};\n  const duplicateItem = listVisitedIssues.find(x => {\n    return item.id === x.id;\n  });\n  return (duplicateItem === null || duplicateItem === void 0 ? void 0 : duplicateItem.id) ? true : false;\n};\n\nconst handleAddItem = (state, item) => {\n  const {\n    listVisitedIssues\n  } = state || {};\n\n  if (listVisitedIssues.length === 5) {\n    const isDuplicate = checkDuplicateItem(state, item);\n    if (isDuplicate) return state;\n    listVisitedIssues.shift();\n    listVisitedIssues.push(item);\n    return state;\n  }\n\n  listVisitedIssues.push(item);\n  return state;\n};\n\nfunction rootReducer(state = initialState, action) {\n  if (action.type === ADD_ITEM) {\n    const newState = Object.assign({}, state);\n    const listItems = handleAddItem(newState, action.payload);\n    state = { ...listItems\n    };\n    return state;\n  }\n\n  return state;\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/home/chanhpham/IT/Projects/github-issues-display/src/redux/reducers/index.js"],"names":["ADD_ITEM","initialState","listVisitedIssues","checkDuplicateItem","state","item","duplicateItem","find","x","id","handleAddItem","length","isDuplicate","shift","push","rootReducer","action","type","newState","Object","assign","listItems","payload"],"mappings":"AAAA,SAASA,QAAT,QAAyB,2BAAzB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,iBAAiB,EAAE;AADF,CAArB;;AAIA,MAAMC,kBAAkB,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACxC,QAAM;AAACH,IAAAA;AAAD,MAAsBE,KAAK,IAAI,EAArC;AAEA,QAAME,aAAa,GAAGJ,iBAAiB,CAACK,IAAlB,CAAuBC,CAAC,IAAI;AAC9C,WAAOH,IAAI,CAACI,EAAL,KAAYD,CAAC,CAACC,EAArB;AACH,GAFqB,CAAtB;AAGA,SAAO,CAAAH,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEG,EAAf,IAAoB,IAApB,GAA2B,KAAlC;AACH,CAPD;;AASA,MAAMC,aAAa,GAAG,CAACN,KAAD,EAAQC,IAAR,KAAiB;AACnC,QAAM;AAACH,IAAAA;AAAD,MAAsBE,KAAK,IAAI,EAArC;;AAEA,MAAIF,iBAAiB,CAACS,MAAlB,KAA6B,CAAjC,EAAoC;AAChC,UAAMC,WAAW,GAAIT,kBAAkB,CAACC,KAAD,EAAQC,IAAR,CAAvC;AACA,QAAIO,WAAJ,EAAiB,OAAOR,KAAP;AACjBF,IAAAA,iBAAiB,CAACW,KAAlB;AACAX,IAAAA,iBAAiB,CAACY,IAAlB,CAAuBT,IAAvB;AACA,WAAOD,KAAP;AACH;;AACDF,EAAAA,iBAAiB,CAACY,IAAlB,CAAuBT,IAAvB;AACA,SAAOD,KAAP;AACH,CAZD;;AAcA,SAASW,WAAT,CAAqBX,KAAK,GAAGH,YAA7B,EAA2Ce,MAA3C,EAAmD;AAC/C,MAAIA,MAAM,CAACC,IAAP,KAAgBjB,QAApB,EAA8B;AAC1B,UAAMkB,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBhB,KAAlB,CAAjB;AACA,UAAMiB,SAAS,GAAGX,aAAa,CAACQ,QAAD,EAAWF,MAAM,CAACM,OAAlB,CAA/B;AACAlB,IAAAA,KAAK,GAAG,EAAC,GAAGiB;AAAJ,KAAR;AACA,WAAOjB,KAAP;AACH;;AACD,SAAOA,KAAP;AACH;;AAED,eAAeW,WAAf","sourcesContent":["import { ADD_ITEM } from \"../constants/actions-type\";\n\nconst initialState = {\n    listVisitedIssues: []\n};\n\nconst checkDuplicateItem = (state, item) => {\n    const {listVisitedIssues} = state || {}\n    \n    const duplicateItem = listVisitedIssues.find(x => {\n        return item.id === x.id\n    })\n    return duplicateItem?.id ? true : false\n}\n\nconst handleAddItem = (state, item) => {\n    const {listVisitedIssues} = state || {}\n\n    if (listVisitedIssues.length === 5) {\n        const isDuplicate  = checkDuplicateItem(state, item)\n        if (isDuplicate) return state\n        listVisitedIssues.shift()\n        listVisitedIssues.push(item)\n        return state\n    }\n    listVisitedIssues.push(item)\n    return state\n}\n\nfunction rootReducer(state = initialState, action) {\n    if (action.type === ADD_ITEM) {\n        const newState = Object.assign({}, state);\n        const listItems = handleAddItem(newState, action.payload)\n        state = {...listItems}\n        return state\n    }\n    return state;\n}\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}